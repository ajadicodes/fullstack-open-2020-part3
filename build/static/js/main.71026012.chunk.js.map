{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/persons.js","components/Notification.js","App.js","index.js"],"names":["Filter","onFilterChange","onChange","PersonForm","props","onSubmit","value","newNameValue","onNameChange","newNumberValue","onNumberChange","type","Person","name","number","onDeleteClick","onClick","Persons","persons","length","map","person","key","id","baseUrl","axios","get","then","response","data","newContact","post","url","delete","status","put","Notification","message","notificationStyle","color","isError","background","fontSize","borderStyle","borderRadius","padding","marginBottom","style","App","useState","setPersons","newName","setNewName","newNumber","setNewNumber","searchInput","setSearchInput","isNotificationError","setIsNotificationError","notificationMessage","setNotificationMessage","useEffect","personsServices","allPersons","resetFields","setNotification","timeout","setTimeout","event","inputValue","target","preventDefault","personIndex","findIndex","element","newContactUpdate","concat","catch","error","personId","window","confirm","updatedPerson","returnedContact","statusCode","filter","match","RegExp","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.71026012.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ onFilterChange }) => {\n  return (\n    <div>\n      filter shown with <input onChange={onFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = (props) => {\n  return (\n    <form onSubmit={props.onSubmit}>\n      <div>\n        name: <input value={props.newNameValue} onChange={props.onNameChange} />\n      </div>\n      <div>\n        number:{\" \"}\n        <input value={props.newNumberValue} onChange={props.onNumberChange} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ name, number, onDeleteClick }) => {\n  return (\n    <div>\n      {name} {number} <button onClick={onDeleteClick}>delete</button>\n    </div>\n  );\n};\n\nconst Persons = ({ persons, onDeleteClick }) => {\n  if (persons.length === 0) {\n    return <div>There is nothing to display</div>;\n  }\n\n  return (\n    <div>\n      {persons.map((person) => (\n        <Person\n          key={person.id}\n          name={person.name}\n          number={person.number}\n          onDeleteClick={() => onDeleteClick(person.id, person.name)}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Persons;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAllPersons = () => {\n  const request = axios.get(baseUrl);\n  return request.then((response) => response.data);\n};\n\nconst create = (newContact) => {\n  const request = axios.post(baseUrl, newContact);\n  return request.then((response) => response.data);\n};\n\nconst deleteContact = (id) => {\n  const url = `${baseUrl}/${id}`;\n  const request = axios.delete(url);\n  return request.then((response) => response.status);\n};\n\nconst updateContact = (id, newContact) => {\n  const url = `${baseUrl}/${id}`;\n  const request = axios.put(url, newContact);\n  return request.then((response) => response.data);\n};\n\nexport default { getAllPersons, create, deleteContact, updateContact };\n","import React from \"react\";\n\nconst Notification = ({ message, isError }) => {\n  const notificationStyle = {\n    color: isError ? \"red\" : \"green\",\n    background: \"lightgray\",\n    fontSize: 20,\n    borderStyle: \"solid\",\n    borderRadius: 5,\n    padding: 10,\n    marginBottom: 10,\n  };\n\n  if (message === null) {\n    return null;\n  }\n\n  return <div style={notificationStyle}>{message}</div>;\n};\n\nexport default Notification;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Persons from \"./components/Persons\";\nimport personsServices from \"./services/persons\";\nimport Notification from \"./components/Notification\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [searchInput, setSearchInput] = useState(\"\");\n  const [isNotificationError, setIsNotificationError] = useState(true);\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n  useEffect(() => {\n    personsServices.getAllPersons().then((allPersons) => {\n      setPersons(allPersons);\n    });\n  }, []);\n\n  const addName = (event) => {\n    event.preventDefault();\n\n    // add name to persons when the form is submitted\n\n    const personIndex = persons.findIndex(\n      (element) => element.name === newName\n    );\n    if (personIndex !== -1) {\n      const personId = persons[personIndex].id;\n\n      const shouldReplace = window.confirm(\n        `${newName} is already added to phonebook, replace the old number with a new one?`\n      );\n      if (shouldReplace) {\n        const person = persons[personIndex];\n        const updatedPerson = { ...person, number: newNumber };\n\n        personsServices\n          .updateContact(personId, updatedPerson)\n          .then((returnedContact) => {\n            setPersons(\n              persons.map((person) =>\n                person.id === personId ? returnedContact : person\n              )\n            );\n          })\n          .catch((error) => {\n            setNotification(error.response.data.message, true);\n\n            // re-render to remove already deleted contact\n            if (error.response.data.statusCode === 410) {\n              setPersons(persons.filter((person) => personId !== person.id));\n            }\n          });\n      }\n      resetFields();\n      return;\n    }\n\n    const newContact = {\n      name: newName,\n      number: newNumber,\n    };\n\n    personsServices\n      .create(newContact)\n      .then((newContactUpdate) => {\n        setPersons(persons.concat(newContactUpdate));\n        setNotification(`Added ${newName}`, false);\n      })\n      .catch((error) => {\n        setNotification(error.response.data.message, true);\n      });\n\n    resetFields();\n  };\n\n  const resetFields = () => {\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n\n  const setNotification = (message, isNotificationError, timeout = 5000) => {\n    setIsNotificationError(isNotificationError);\n    setNotificationMessage(message);\n    setTimeout(() => setNotificationMessage(null), timeout);\n  };\n\n  const handleNameInputChange = (event) => {\n    const inputValue = event.target.value;\n    setNewName(inputValue);\n  };\n\n  const handleNumberInputChange = (event) => {\n    const inputValue = event.target.value;\n    setNewNumber(inputValue);\n  };\n\n  const handleFilterChange = (event) => {\n    const inputValue = event.target.value;\n    setSearchInput(inputValue);\n  };\n\n  const handleDelete = (id, name) => {\n    const shouldDelete = window.confirm(\n      `Do you really want to delete ${name}?`\n    );\n\n    if (shouldDelete) {\n      personsServices\n        .deleteContact(id)\n        .then(() => {\n          setPersons(persons.filter((person) => person.id !== id));\n        })\n        .catch((error) => {\n          setNotification(error.response.data.message, true);\n          // re-render to remove already deleted contact\n          if (error.response.data.statusCode === 410) {\n            setPersons(persons.filter((person) => person.id !== id));\n          }\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification\n        message={notificationMessage}\n        isError={isNotificationError}\n      />\n      <Filter onFilterChange={handleFilterChange} />\n      <h3>Add a new</h3>\n      <PersonForm\n        onSubmit={addName}\n        newNameValue={newName}\n        newNumberValue={newNumber}\n        onNameChange={handleNameInputChange}\n        onNumberChange={handleNumberInputChange}\n      />\n      <h3>Numbers</h3>\n      <Persons\n        persons={\n          searchInput !== \"\"\n            ? persons.filter((person) =>\n                person.name.match(new RegExp(`${searchInput}`, \"i\"))\n              )\n            : persons\n        }\n        onDeleteClick={handleDelete}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}